{
    "/": "Nothing MU HA HA HA HA",
    "/api/oneshot": {
        "/post": {
            "method": "POST",
            "description": "Post a new oneshot",
            "body": {
                "date": "yyyy-mm-dd",
                "place": {
                    "name": "formatted address",
                    "lat": "float",
                    "lng": "float"
                },
                "title": "up to 50 chars",
                "description": "up to 500 chars",
                "time": "hh:mm (24h)",
                "max_players": "int, > 0",
                "out_players": "int, >= 0",
                "characters_level": "optional, int > 0",
                "extra_info": "up to 500 chars"
            },
            "response": {
                "code": {
                    "400": "Bad request, user messed up",
                    "201": "Created",
                    "*": "Unexpected error"
                },
                "body": {
                    "oneshotUID": "generated by Firebase"
                }
            }
        },
        "/view/:oneshotUID": {
            "method": "GET",
            "params": {
                "oneshotUID": "generated by Firebase"
            },
            "description": "View a oneshot",
            "response": {
                "code": {
                    "200": "OK",
                    "404": "Not found",
                    "*": "Unexpected error"
                },
                "body": {
                    "date": "yyyy-mm-dd",
                    "place": "Some string Google understands",
                    "title": "up to 50 chars",
                    "description": "up to 500 chars",
                    "time": "hh:mm (24h)",
                    "max_players": "int, > 0",
                    "out_players": "int, >= 0",
                    "characters_level": "optional, int > 0",
                    "extra_info": "up to 500 chars",
                    "present_players": "array of strings (userUIDs)",
                    "tentative_players": "array of strings (userUIDs)"
                }
            }
        },
        "/edit/:oneshotUID": {
            "method": "PUT",
            "params": {
                "oneshotUID": "generated by Firebase"
            },
            "description": "Edit a oneshot",
            "body": {
                "date": "yyyy-mm-dd",
                "place": "Some string Google understands",
                "title": "up to 50 chars",
                "description": "up to 500 chars",
                "time": "hh:mm (24h)",
                "max_players": "int, > 0",
                "out_players": "int, >= 0",
                "characters_level": "optional, int > 0",
                "extra_info": "up to 500 chars"
            },
            "response": {
                "code": {
                    "400": "Bad request, user messed up",
                    "200": "OK",
                    "404": "Not found",
                    "403": "User is not the owner of the oneshot",
                    "*": "Unexpected error"
                }
            }
        },
        "/delete/:oneshotUID": {
            "method": "DELETE",
            "params": {
                "oneshotUID": "generated by Firebase"
            },
            "description": "Delete a oneshot",
            "response": {
                "code": {
                    "200": "OK",
                    "404": "Not found",
                    "403": "User is not the owner of the oneshot",
                    "*": "Unexpected error"
                }
            }
        },
        "/join/:oneshotUID": {
            "method": "POST",
            "params": {
                "oneshotUID": "generated by Firebase"
            },
            "description": "Join a oneshot",
            "response": {
                "code": {
                    "200": "OK",
                    "404": "Not found",
                    "403": "Oneshot is full or user is owner of the oneshot",
                    "*": "Unexpected error"
                }
            }
        },
        "/leave/:oneshotUID": {
            "method": "POST",
            "params": {
                "oneshotUID": "generated by Firebase"
            },
            "description": "Leave a oneshot",
            "response": {
                "code": {
                    "200": "OK",
                    "404": "Not found",
                    "403": "User is owner of the oneshot",
                    "*": "Unexpected error"
                }
            }
        },
        "/tentative/:oneshotUID": {
            "method": "POST",
            "params": {
                "oneshotUID": "generated by Firebase"
            },
            "description": "Mark yourself as interested in the oneshot, but not sure if you can make it",
            "response": {
                "code": {
                    "200": "OK",
                    "404": "Not found",
                    "403": "Oneshot is full or user is owner of the oneshot",
                    "*": "Unexpected error"
                }
            }
        }
    },
    "api/user": {
        "/get/:userFID": {
            "method": "GET",
            "description": "Retrieve the user's data",
            "response": {
                "code": {
                    "200": "OK",
                    "*": "Unexpected error"
                },
                "body": {
                    "nickname": "string",
                    "hashnum": "4 digits code"
                }
            }
        },
        "/update": {
            "method": "POST",
            "description": "Update user's nickname and / or email",
            "body": {
                "nickname": "string",
                "hashnum": "4 digits code"
            },
            "response": {
                "code": {
                    "200": "OK",
                    "*": "Unexpected error"
                }
            }
        }
    },
    "api/notifications": {
        "/subscribe": {
            "method": "POST",
            "description": "Subscribe to notifications",
            "body": {
                "token": "token di firebase",
                "type": "newOneshot/messages",
                "preferences": "dipende dal type",
                "viaEmail": "bool"
            },
            "response": {
                "code": {
                    "200": "OK",
                    "*": "Unexpected error"
                }
            }
        }
    }
}